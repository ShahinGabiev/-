Зададние №1
#include <iostream>
#include <vector>

using namespace std;

int main() {
  vector<int> numbers = {1, 2, 2, 3, 4, 4, 5, 1, 6, 3};

  for (int num : numbers) {
    cout << num << " ";
  }
  cout << endl;

  vector<int> result;
  for (int i = 0; i < numbers.size(); i++) {
    bool found = false;
    for (int j = 0; j < result.size(); j++) {
      if (numbers[i] == result[j]) {
        found = true;
        break;
      }
    }
    if (!found) {
      result.push_back(numbers[i]);
    }
  }

  cout << "Массив с уникальными элементами: ";
  for (int num : result) {
    cout << num << " ";
  }
  cout << endl;

  return 0;
}
Задание №2
#include <iostream>
#include <vector>

using namespace std;

int main() {

  vector<int> arr1 = {2, 5, 8, 12};
  vector<int> arr2 = {1, 3, 7, 9, 15};
  
  for (int num : arr1) {
    cout << num << " ";
  }
  cout << endl;

    for (int num :arr2) {
    cout << num << " ";
  }
  cout << endl;

  vector<int> merged_array;


  int i = 0, j = 0;

  while (i < arr1.size() && j < arr2.size()) {
    if (arr1[i] <= arr2[j]) {
      merged_array.push_back(arr1[i]);
      i++;
    } else {
      merged_array.push_back(arr2[j]);
      j++;
    }
  }

  
  while (i < arr1.size()) {
    merged_array.push_back(arr1[i]);
    i++;
  }

  while (j < arr2.size()) {
    merged_array.push_back(arr2[j]);
    j++;
  }

  cout << "Объединенный отсортированный массив: ";
  for (int num : merged_array) {
    cout << num << " ";
  }
  cout << endl;

  return 0;
}
Задание №3
#include <iostream>
#include <vector>

using namespace std;

int main() {

  vector<int> arr = {-2, 1, -3, 4, -1, 2, 1, -5, 4};


  int max_so_far = arr[0];
  int max_ending_here = arr[0];
  int start_index = 0;
  int end_index = 0;
  int temp_start_index = 0;

  for (int i = 1; i < arr.size(); i++) {

    if (arr[i] > max_ending_here + arr[i]) {
      max_ending_here = arr[i];
      temp_start_index = i;

    } else {

      max_ending_here = max_ending_here + arr[i];

    }

    if (max_so_far < max_ending_here) {
      max_so_far = max_ending_here;
      start_index = temp_start_index;
      end_index = i;
    }
  }

  cout << "Максимальная сумма: " << max_so_far << endl;
  cout << "Подмассив: ";
  for (int i = start_index; i <= end_index; i++) {
    cout << arr[i] << " ";
  }
  cout << endl;

  return 0;
}
Задание №4
#include <iostream>
#include <vector>

void rearrangeEvenOdd(std::vector<int>& arr) {
    int n = arr.size();
    int j = 0; 

    for (int i = 0; i < n; i++) {
        if (arr[i] % 2 == 0) {
            std::swap(arr[i], arr[j]);
            j++;
        }
    }
}

int main() {
    std::vector<int> arr = { 1, 2, 3, 4, 5, 6 };

    rearrangeEvenOdd(arr);

    for (int arr : arr) {
        std::cout << arr << " ";
    }
}

//zadanie 1
#include <iostream>
#include <vector>

std::vector<int> removeDuplicates(const std::vector<int>& nums) {
    std::vector<int> unique; 
    bool isDuplicate;

    for (size_t i = 0; i < nums.size(); ++i) {
        isDuplicate = false;

        for (size_t j = 0; j < unique.size(); ++j) {
            if (nums[i] == unique[j]) {
                isDuplicate = true;
                break;
            }
        }

        if (!isDuplicate) {
            unique.push_back(nums[i]);
        }
    }

    return unique;
}

int main() {
    std::vector<int> nums = { 1, 2, 2, 3, 4, 4, 5 };
    std::vector<int> uniqueNums = removeDuplicates(nums);

    std::cout << "Unique elements: ";
    for (int num : uniqueNums) {
        std::cout << num << " ";
    }
    std::cout << std::endl;

    return 0;
}
